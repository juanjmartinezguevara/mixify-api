{"ast":null,"code":"var _jsxFileName = \"/Users/JuanMtz/Desktop/Labs/w06/project-api/src/components/Playlist.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport token from \"./Token\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Playlist(props) {\n  _s();\n\n  let [categories, setCategories] = useState([\"\"]);\n  let [category, setCategory] = useState(\"\");\n  let [playlists, setPlaylists] = useState([]);\n  let [tracks, setTracks] = useState([]);\n  let [allTracks, setAllTracks] = useState([]);\n  useEffect(() => {\n    getSpotifyData();\n  }, []);\n\n  async function getSpotifyData() {\n    fetch(`https://api.spotify.com/v1/browse/categories?limit=50`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${await token()}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(\"getSpotifyData()\", data);\n      setCategories(data.categories.items);\n    });\n  }\n\n  async function getCategoryData(category_id) {\n    setCategory(category_id);\n    fetch(`https://api.spotify.com/v1/browse/categories/${category_id}/playlists`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${await token()}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(\"playlists\", data.playlists);\n      setPlaylists(data.playlists.items);\n      data.playlists.items.map(async eachPlaylist => {\n        fetch(`https://api.spotify.com/v1/playlists/${eachPlaylist.id}/tracks`, {\n          headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${await token()}`,\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(res => res.json()).then(data => {\n          console.log(\"tracks\", data.items);\n          setAllTracks(...tracks, data.items);\n        }).catch(error => {\n          console.log(error);\n        });\n      });\n    });\n  }\n\n  async function getTrackData(playlist_id) {\n    fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${await token()}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(\"tracks\", data.items);\n      setTracks(data.items);\n    });\n  }\n\n  const showCategories = () => {\n    return categories.map(eachCat => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => getCategoryData(eachCat.id),\n        children: eachCat.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const showPlaylist = () => {\n    return playlists.map(eachPlaylist => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => getTrackData(eachPlaylist.id),\n        children: eachPlaylist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const showTracks = () => {\n    return tracks.map(eachTrack => {\n      if (eachTrack.track.preview_url) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [eachTrack.track.preview_url, /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: eachTrack.track.preview_url,\n              type: \"audio/mpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n\n  let chillIds = [];\n  let chillTracks = [];\n  console.log(chillIds);\n\n  const chillBtnVal = e => {\n    getCategoryData(\"chill\");\n    console.log(\"playlists has been set\", playlists);\n    playlists.forEach(elm => chillIds.push(getTrackData(elm.id)));\n    chillIds.forEach(each => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [each.track.preview_url, /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: each.track.preview_url,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Step 3: Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"cars\",\n      id: \"cars\",\n      multiple: true,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"multiple-choice\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Now that you've got your itinerary, what vibe are you going for?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"pop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Adventurous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onChange: chillBtnVal,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"chill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Chill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Party\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Romantic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Wholesome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), \"TRACKS\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: showTracks()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), \"PLAYLIST\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: showPlaylist()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), \"CATEGORIES\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: showCategories()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-row\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/attractions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Previous: Attractions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/myexperience\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Finish Up: My Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Playlist, \"aBT2I+bCnFPiZO4NWLA3Fzzxpmk=\");\n\n_c = Playlist;\nexport default Playlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"sources":["/Users/JuanMtz/Desktop/Labs/w06/project-api/src/components/Playlist.js"],"names":["React","useState","useEffect","Link","token","Playlist","props","categories","setCategories","category","setCategory","playlists","setPlaylists","tracks","setTracks","allTracks","setAllTracks","getSpotifyData","fetch","headers","Accept","Authorization","then","res","json","data","console","log","items","getCategoryData","category_id","map","eachPlaylist","id","catch","error","getTrackData","playlist_id","showCategories","eachCat","name","showPlaylist","showTracks","eachTrack","track","preview_url","chillIds","chillTracks","chillBtnVal","e","forEach","elm","push","each"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport token from \"./Token\";\n\nfunction Playlist(props) {\n  let [categories, setCategories] = useState([\"\"]);\n  let [category, setCategory] = useState(\"\");\n  let [playlists, setPlaylists] = useState([]);\n  let [tracks, setTracks] = useState([]);\n  let [allTracks, setAllTracks] = useState([])\n\n  useEffect(() => {\n    getSpotifyData();\n  }, []);\n  async function getSpotifyData() {\n    fetch(`https://api.spotify.com/v1/browse/categories?limit=50`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${await token()}`,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"getSpotifyData()\", data);\n        setCategories(data.categories.items);\n      });\n  }\n\n  async function getCategoryData(category_id) {\n    setCategory(category_id);\n    fetch(\n      `https://api.spotify.com/v1/browse/categories/${category_id}/playlists`,\n      {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${await token()}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"playlists\", data.playlists);\n        setPlaylists(data.playlists.items);\n        data.playlists.items.map(async eachPlaylist => {\n            fetch(`https://api.spotify.com/v1/playlists/${eachPlaylist.id}/tracks`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${await token()}`,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"tracks\", data.items);\n        setAllTracks(...tracks, data.items);\n      })\n      .catch((error)=>{\n          console.log(error)\n      });\n        })\n      });\n  }\n\n  async function getTrackData(playlist_id) {\n    fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${await token()}`,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"tracks\", data.items);\n        setTracks(data.items);\n      });\n  }\n\n  const showCategories = () => {\n    return categories.map((eachCat) => {\n      return (\n        <li onClick={() => getCategoryData(eachCat.id)}>{eachCat.name}</li>\n      );\n    });\n  };\n\n  const showPlaylist = () => {\n    return playlists.map((eachPlaylist) => {\n      return (\n        <li onClick={() => getTrackData(eachPlaylist.id)}>\n          {eachPlaylist.name}\n        </li>\n      );\n    });\n  };\n\n  const showTracks = () => {\n    return tracks.map((eachTrack) => {\n      if (eachTrack.track.preview_url) {\n        return (\n          <li>\n            {eachTrack.track.preview_url}\n            <audio controls>\n              <source src={eachTrack.track.preview_url} type=\"audio/mpeg\" />\n            </audio>\n          </li>\n        );\n      }\n    });\n  };\n\n  let chillIds = [];\n  let chillTracks = [];\n  console.log(chillIds)\n\n  const chillBtnVal = (e) => {\n    getCategoryData(\"chill\");\n    console.log(\"playlists has been set\", playlists);\n    playlists.forEach((elm) => chillIds.push(getTrackData(elm.id)));\n    chillIds.forEach((each) => {\n      return (\n        <li>\n          {each.track.preview_url}\n          <audio controls>\n            <source src={each.track.preview_url} type=\"audio/mpeg\" />\n          </audio>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <h1>Step 3: Playlist</h1>\n      <form name=\"cars\" id=\"cars\" multiple>\n        <ul className=\"multiple-choice\">\n          <h3>\n            Now that you've got your itinerary, what vibe are you going for?\n          </h3>\n\n          <div>\n            <input type=\"radio\" value=\"pop\" />\n            <label>Adventurous</label>\n          </div>\n\n          <div onChange={chillBtnVal}>\n            <input type=\"radio\" value=\"chill\" />\n            <label>Chill</label>\n          </div>\n\n          <div>\n            <input type=\"radio\" value=\"C\" />\n            <label>Party</label>\n          </div>\n\n          <div>\n            <input type=\"radio\" value=\"C\" />\n            <label>Romantic</label>\n          </div>\n\n          <div>\n            <input type=\"radio\" value=\"D\" />\n            <label>Wholesome</label>\n          </div>\n        </ul>\n      </form>\n      <h1>{category}</h1>\n      TRACKS\n      <ul>{showTracks()}</ul>\n      PLAYLIST\n      <ul>{showPlaylist()}</ul>\n      CATEGORIES\n      <ul>{showCategories()}</ul>\n      <div className=\"buttons-row\">\n        <Link to=\"/attractions\">\n          <button>Previous: Attractions</button>\n        </Link>\n        <Link to=\"/myexperience\">\n          <button>Finish Up: My Experience</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}