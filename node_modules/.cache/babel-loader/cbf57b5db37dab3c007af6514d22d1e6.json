{"ast":null,"code":"var _jsxFileName = \"/Users/JuanMtz/Documents/Business/Experiences/2021:01-03 - Ironhack FTWD/w06/project-api/src/components/Playlist.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport token from \"./Token\";\n\nfunction Playlist(props) {\n  _s();\n\n  let [categories, setCategories] = useState([]);\n  let [category, setCategory] = useState(\"\");\n  let [playlists, setPlaylists] = useState([]); // let [tracks, setTracks] = useState([]);\n\n  let [randomPlaylist, setRandomPlaylist] = useState([]);\n  let allPlaylists = [];\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  async function getCategories() {\n    fetch(`https://api.spotify.com/v1/browse/categories?limit=50`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${await token()}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(\"Fetching categories data...\", data);\n      setCategories(data.categories.items);\n    });\n  }\n\n  async function getPlaylists(category_id) {\n    setCategory(category_id);\n    fetch(`https://api.spotify.com/v1/browse/categories/${category_id}/playlists`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${await token()}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(`Fetching the ${category_id.toUpperCase()} category playlists...`, data.playlists);\n      setPlaylists(data.playlists.items);\n      data.playlists.items.map(async eachPlaylist => {\n        fetch(`https://api.spotify.com/v1/playlists/${eachPlaylist.id}/tracks`, {\n          headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${await token()}`,\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(res => res.json()).then(data => {\n          console.log(`Fetching the ${eachPlaylist.name.toUpperCase()} playlist tracks...`, data.items);\n          setRandomPlaylist(data.items);\n          allPlaylists.concat(data.items);\n          console.log(allPlaylists);\n        }).catch(error => {\n          console.log(error);\n        });\n      });\n    });\n  }\n\n  const showCategories = () => {\n    return categories.map(eachCat => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => getPlaylists(eachCat.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, eachCat.name);\n    });\n  };\n\n  let randomInt;\n\n  const showPlaylist = () => {\n    return allPlaylists.map(eachPlaylist => {\n      randomInt = getRandomInt(allPlaylists.length);\n\n      for (let i = 0; i < 35; i++) {\n        var _allPlaylists$randomI;\n\n        if ((_allPlaylists$randomI = allPlaylists[randomInt]) === null || _allPlaylists$randomI === void 0 ? void 0 : _allPlaylists$randomI.track.preview_url) {\n          var _allPlaylists$randomI2, _allPlaylists$randomI3, _allPlaylists$randomI4;\n\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"music-tile\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: (_allPlaylists$randomI2 = allPlaylists[randomInt]) === null || _allPlaylists$randomI2 === void 0 ? void 0 : _allPlaylists$randomI2.track.album.images[0].url,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }\n          }, (_allPlaylists$randomI3 = allPlaylists[randomInt]) === null || _allPlaylists$randomI3 === void 0 ? void 0 : _allPlaylists$randomI3.track.name), /*#__PURE__*/React.createElement(\"audio\", {\n            controls: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"source\", {\n            src: (_allPlaylists$randomI4 = allPlaylists[randomInt]) === null || _allPlaylists$randomI4 === void 0 ? void 0 : _allPlaylists$randomI4.track.preview_url,\n            type: \"audio/mpeg\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }\n          })));\n        }\n      }\n    });\n  };\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Choose a genre for your new playlist!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, showCategories())), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Welcome to your custom playlist...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playlist-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, showPlaylist())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-row margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Return: Home\"))));\n}\n\n_s(Playlist, \"hrwtnO+brgRv83lHkNAwAYy9/s8=\");\n\n_c = Playlist;\nexport default Playlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"sources":["/Users/JuanMtz/Documents/Business/Experiences/2021:01-03 - Ironhack FTWD/w06/project-api/src/components/Playlist.js"],"names":["React","useState","useEffect","Link","axios","token","Playlist","props","categories","setCategories","category","setCategory","playlists","setPlaylists","randomPlaylist","setRandomPlaylist","allPlaylists","getCategories","fetch","headers","Accept","Authorization","then","res","json","data","console","log","items","getPlaylists","category_id","toUpperCase","map","eachPlaylist","id","name","concat","catch","error","showCategories","eachCat","randomInt","showPlaylist","getRandomInt","length","i","track","preview_url","album","images","url","max","Math","floor","random"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAI,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAAxC,CAHuB,CAIvB;;AACA,MAAI,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAAlD;AACA,MAAIe,YAAY,GAAG,EAAnB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,aAAf,GAA+B;AAC7BC,IAAAA,KAAK,CAAE,uDAAF,EAA0D;AAC7DC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEPC,QAAAA,aAAa,EAAG,UAAS,MAAMhB,KAAK,EAAG,EAFhC;AAGP,wBAAgB;AAHT;AADoD,KAA1D,CAAL,CAOGiB,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,EAQGF,IARH,CAQSG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,IAA3C;AACAhB,MAAAA,aAAa,CAACgB,IAAI,CAACjB,UAAL,CAAgBoB,KAAjB,CAAb;AACD,KAXH;AAYD;;AAED,iBAAeC,YAAf,CAA4BC,WAA5B,EAAyC;AACvCnB,IAAAA,WAAW,CAACmB,WAAD,CAAX;AACAZ,IAAAA,KAAK,CACF,gDAA+CY,WAAY,YADzD,EAEH;AACEX,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEPC,QAAAA,aAAa,EAAG,UAAS,MAAMhB,KAAK,EAAG,EAFhC;AAGP,wBAAgB;AAHT;AADX,KAFG,CAAL,CAUGiB,IAVH,CAUSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAVjB,EAWGF,IAXH,CAWSG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CACG,gBAAeG,WAAW,CAACC,WAAZ,EAA0B,wBAD5C,EAEEN,IAAI,CAACb,SAFP;AAIAC,MAAAA,YAAY,CAACY,IAAI,CAACb,SAAL,CAAegB,KAAhB,CAAZ;AACAH,MAAAA,IAAI,CAACb,SAAL,CAAegB,KAAf,CAAqBI,GAArB,CAAyB,MAAOC,YAAP,IAAwB;AAC/Cf,QAAAA,KAAK,CACF,wCAAuCe,YAAY,CAACC,EAAG,SADrD,EAEH;AACEf,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,kBADD;AAEPC,YAAAA,aAAa,EAAG,UAAS,MAAMhB,KAAK,EAAG,EAFhC;AAGP,4BAAgB;AAHT;AADX,SAFG,CAAL,CAUGiB,IAVH,CAUSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAVjB,EAWGF,IAXH,CAWSG,IAAD,IAAU;AACdC,UAAAA,OAAO,CAACC,GAAR,CACG,gBAAeM,YAAY,CAACE,IAAb,CAAkBJ,WAAlB,EAAgC,qBADlD,EAEEN,IAAI,CAACG,KAFP;AAIAb,UAAAA,iBAAiB,CAACU,IAAI,CAACG,KAAN,CAAjB;AACAZ,UAAAA,YAAY,CAACoB,MAAb,CAAoBX,IAAI,CAACG,KAAzB;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;AACD,SAnBH,EAoBGqB,KApBH,CAoBUC,KAAD,IAAW;AAChBZ,UAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,SAtBH;AAuBD,OAxBD;AAyBD,KA1CH;AA2CD;;AAED,QAAMC,cAAc,GAAG,MAAM;AAC3B,WAAO/B,UAAU,CAACwB,GAAX,CAAgBQ,OAAD,IAAa;AACjC,0BACE;AAAQ,QAAA,OAAO,EAAE,MAAMX,YAAY,CAACW,OAAO,CAACN,EAAT,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkDM,OAAO,CAACL,IAA1D,CADF;AAGD,KAJM,CAAP;AAKD,GAND;;AAQA,MAAIM,SAAJ;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB,WAAO1B,YAAY,CAACgB,GAAb,CAAkBC,YAAD,IAAkB;AACxCQ,MAAAA,SAAS,GAAGE,YAAY,CAAC3B,YAAY,CAAC4B,MAAd,CAAxB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAAA;;AAC3B,qCAAI7B,YAAY,CAACyB,SAAD,CAAhB,0DAAI,sBAAyBK,KAAzB,CAA+BC,WAAnC,EAAgD;AAAA;;AAC9C,8BACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAK,YAAA,GAAG,4BAAE/B,YAAY,CAACyB,SAAD,CAAd,2DAAE,uBAAyBK,KAAzB,CAA+BE,KAA/B,CAAqCC,MAArC,CAA4C,CAA5C,EAA+CC,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAKlC,YAAY,CAACyB,SAAD,CAAjB,2DAAK,uBAAyBK,KAAzB,CAA+BX,IAApC,CAFF,eAGE;AAAO,YAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AACE,YAAA,GAAG,4BAAEnB,YAAY,CAACyB,SAAD,CAAd,2DAAE,uBAAyBK,KAAzB,CAA+BC,WADtC;AAEE,YAAA,IAAI,EAAC,YAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAHF,CADF;AAYD;AACF;AACF,KAlBM,CAAP;AAmBD,GApBD;;AAsBA,WAASJ,YAAT,CAAsBQ,GAAtB,EAA2B;AACzB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,eAEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCZ,cAAc,EAA9C,CAFF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,eAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCG,YAAY,EAA7C,CAFF,CANF,eAWE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CAXF,CADF;AAmBD;;GAjIQpC,Q;;KAAAA,Q;AAmIT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios'\nimport token from \"./Token\";\n\nfunction Playlist(props) {\n  let [categories, setCategories] = useState([]);\n  let [category, setCategory] = useState(\"\");\n  let [playlists, setPlaylists] = useState([]);\n  // let [tracks, setTracks] = useState([]);\n  let [randomPlaylist, setRandomPlaylist] = useState([]);\n  let allPlaylists = []\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  async function getCategories() {\n    fetch(`https://api.spotify.com/v1/browse/categories?limit=50`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${await token()}`,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Fetching categories data...\", data);\n        setCategories(data.categories.items);\n      });\n  }\n\n  async function getPlaylists(category_id) {\n    setCategory(category_id);\n    fetch(\n      `https://api.spotify.com/v1/browse/categories/${category_id}/playlists`,\n      {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${await token()}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\n          `Fetching the ${category_id.toUpperCase()} category playlists...`,\n          data.playlists\n        );\n        setPlaylists(data.playlists.items);\n        data.playlists.items.map(async (eachPlaylist) => {\n          fetch(\n            `https://api.spotify.com/v1/playlists/${eachPlaylist.id}/tracks`,\n            {\n              headers: {\n                Accept: \"application/json\",\n                Authorization: `Bearer ${await token()}`,\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          )\n            .then((res) => res.json())\n            .then((data) => {\n              console.log(\n                `Fetching the ${eachPlaylist.name.toUpperCase()} playlist tracks...`,\n                data.items\n              );\n              setRandomPlaylist(data.items);\n              allPlaylists.concat(data.items);\n              console.log(allPlaylists)\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        });\n      });\n  }\n\n  const showCategories = () => {\n    return categories.map((eachCat) => {\n      return (\n        <button onClick={() => getPlaylists(eachCat.id)}>{eachCat.name}</button>\n      );\n    });\n  };\n\n  let randomInt;\n\n  const showPlaylist = () => {\n    return allPlaylists.map((eachPlaylist) => {\n      randomInt = getRandomInt(allPlaylists.length);\n      for (let i = 0; i < 35; i++) {\n        if (allPlaylists[randomInt]?.track.preview_url) {\n          return (\n            <div className=\"music-tile\">\n              <img src={allPlaylists[randomInt]?.track.album.images[0].url} />\n              <h3>{allPlaylists[randomInt]?.track.name}</h3>\n              <audio controls>\n                <source\n                  src={allPlaylists[randomInt]?.track.preview_url}\n                  type=\"audio/mpeg\"\n                />\n              </audio>\n            </div>\n          );\n        }\n      }\n    });\n  };\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  return (\n    <div>\n      <div className=\"margin\">\n        <h1>Choose a genre for your new playlist!</h1>\n        <div className=\"buttons-panel\">{showCategories()}</div>\n      </div>\n\n      <div>\n        <h2 className=\"margin\">Welcome to your custom playlist...</h2>\n        <div className=\"playlist-panel\">{showPlaylist()}</div>\n      </div>\n\n      <div className=\"buttons-row margin\">\n        <Link to=\"/\">\n          <button>Return: Home</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}