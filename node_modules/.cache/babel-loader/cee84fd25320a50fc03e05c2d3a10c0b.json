{"ast":null,"code":"var _jsxFileName = \"/Users/JuanMtz/Desktop/Labs/w06/project-api/src/components/Playlist.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport token from \"./Token\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Playlist(props) {\n  _s();\n\n  let [categories, setCategories] = useState([\"\"]);\n  let [category, setCategory] = useState(\"\");\n  let [playlists, setPlaylists] = useState([]);\n  let [tracks, setTracks] = useState([]);\n  let [allTracks, setAllTracks] = useState([]);\n  useEffect(() => {\n    getSpotifyData();\n  }, []);\n\n  async function getSpotifyData() {\n    fetch(`https://api.spotify.com/v1/browse/categories?limit=60`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${await token()}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(\"getSpotifyData()\", data);\n      setCategories(data.categories.items);\n    });\n  }\n\n  async function getCategoryData(category_id) {\n    setCategory(category_id);\n    fetch(`https://api.spotify.com/v1/browse/categories/${category_id}/playlists`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${await token()}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(`Fetching ${category_id} data...`, data.playlists);\n      setPlaylists(data.playlists.items);\n      data.playlists.items.map(async eachPlaylist => {\n        fetch(`https://api.spotify.com/v1/playlists/${eachPlaylist.id}/tracks`, {\n          headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${await token()}`,\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(res => res.json()).then(data => {\n          console.log(\"tracks\", data.items);\n          setAllTracks(...tracks, data.items);\n        }).catch(error => {\n          console.log(error);\n        });\n      });\n    });\n  } //   async function getTrackData(playlist_id) {\n  //     fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         Authorization: `Bearer ${await token()}`,\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     })\n  //       .then((res) => res.json())\n  //       .then((data) => {\n  //         console.log(\"tracks\", data.items);\n  //         setTracks(data.items);\n  //       });\n  //   }\n  //   const showCategories = () => {\n  //     return categories.map((eachCat) => {\n  //       return (\n  //         <li onClick={() => getCategoryData(eachCat.id)}>{eachCat.name}</li>\n  //       );\n  //     });\n  //   };\n  //   const showPlaylist = () => {\n  //     return playlists.map((eachPlaylist) => {\n  //       return (\n  //         <li onClick={() => getTrackData(eachPlaylist.id)}>\n  //           {eachPlaylist.name}\n  //         </li>\n  //       );\n  //     });\n  //   };\n  //   const showTracks = () => {\n  //     return tracks.map((eachTrack) => {\n  //       if (eachTrack.track.preview_url) {\n  //         return (\n  //           <li>\n  //             {eachTrack.track.preview_url}\n  //             <audio controls>\n  //               <source src={eachTrack.track.preview_url} type=\"audio/mpeg\" />\n  //             </audio>\n  //           </li>\n  //         );\n  //       }\n  //     });\n  //   };\n\n\n  const getChillPlaylist = e => {\n    getCategoryData(\"chill\");\n    tracks.map(each => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [each.track.name, /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: each.track.preview_url,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Step 3: Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"cars\",\n      id: \"cars\",\n      multiple: true,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"multiple-choice\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Now that you've got your itinerary, what vibe are you going for?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"pop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Adventurous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onChange: getChillPlaylist,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"chill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Chill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Party\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Romantic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Wholesome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-row\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/attractions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Previous: Attractions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/myexperience\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Finish Up: My Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Playlist, \"aBT2I+bCnFPiZO4NWLA3Fzzxpmk=\");\n\n_c = Playlist;\nexport default Playlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"sources":["/Users/JuanMtz/Desktop/Labs/w06/project-api/src/components/Playlist.js"],"names":["React","useState","useEffect","Link","token","Playlist","props","categories","setCategories","category","setCategory","playlists","setPlaylists","tracks","setTracks","allTracks","setAllTracks","getSpotifyData","fetch","headers","Accept","Authorization","then","res","json","data","console","log","items","getCategoryData","category_id","map","eachPlaylist","id","catch","error","getChillPlaylist","e","each","track","name","preview_url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport token from \"./Token\";\n\nfunction Playlist(props) {\n  let [categories, setCategories] = useState([\"\"]);\n  let [category, setCategory] = useState(\"\");\n  let [playlists, setPlaylists] = useState([]);\n  let [tracks, setTracks] = useState([]);\n  let [allTracks, setAllTracks] = useState([]);\n\n    useEffect(() => {\n      getSpotifyData();\n    }, []);\n\n    async function getSpotifyData() {\n      fetch(`https://api.spotify.com/v1/browse/categories?limit=60`, {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${await token()}`,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(\"getSpotifyData()\", data);\n          setCategories(data.categories.items);\n        });\n    }\n\n  async function getCategoryData(category_id) {\n    setCategory(category_id);\n    fetch(\n      `https://api.spotify.com/v1/browse/categories/${category_id}/playlists`,\n      {\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${await token()}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(`Fetching ${category_id} data...`, data.playlists);\n        setPlaylists(data.playlists.items);\n        data.playlists.items.map(async (eachPlaylist) => {\n          fetch(\n            `https://api.spotify.com/v1/playlists/${eachPlaylist.id}/tracks`,\n            {\n              headers: {\n                Accept: \"application/json\",\n                Authorization: `Bearer ${await token()}`,\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          )\n            .then((res) => res.json())\n            .then((data) => {\n              console.log(\"tracks\", data.items);\n              setAllTracks(...tracks, data.items);\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        });\n      });\n  }\n\n  //   async function getTrackData(playlist_id) {\n  //     fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         Authorization: `Bearer ${await token()}`,\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     })\n  //       .then((res) => res.json())\n  //       .then((data) => {\n  //         console.log(\"tracks\", data.items);\n  //         setTracks(data.items);\n  //       });\n  //   }\n\n  //   const showCategories = () => {\n  //     return categories.map((eachCat) => {\n  //       return (\n  //         <li onClick={() => getCategoryData(eachCat.id)}>{eachCat.name}</li>\n  //       );\n  //     });\n  //   };\n\n  //   const showPlaylist = () => {\n  //     return playlists.map((eachPlaylist) => {\n  //       return (\n  //         <li onClick={() => getTrackData(eachPlaylist.id)}>\n  //           {eachPlaylist.name}\n  //         </li>\n  //       );\n  //     });\n  //   };\n\n  //   const showTracks = () => {\n  //     return tracks.map((eachTrack) => {\n  //       if (eachTrack.track.preview_url) {\n  //         return (\n  //           <li>\n  //             {eachTrack.track.preview_url}\n  //             <audio controls>\n  //               <source src={eachTrack.track.preview_url} type=\"audio/mpeg\" />\n  //             </audio>\n  //           </li>\n  //         );\n  //       }\n  //     });\n  //   };\n\n  const getChillPlaylist = (e) => {\n    getCategoryData(\"chill\");\n    tracks.map((each) => {\n      return (\n        <li>\n          {each.track.name}\n          <audio controls>\n            <source src={each.track.preview_url} type=\"audio/mpeg\" />\n          </audio>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <h1>Step 3: Playlist</h1>\n      <form name=\"cars\" id=\"cars\" multiple>\n        <ul className=\"multiple-choice\">\n          <h3>\n            Now that you've got your itinerary, what vibe are you going for?\n          </h3>\n\n          <div>\n            <input type=\"radio\" value=\"pop\" />\n            <label>Adventurous</label>\n          </div>\n\n          <div onChange={getChillPlaylist}>\n            <input type=\"radio\" value=\"chill\" />\n            <label>Chill</label>\n          </div>\n\n          <div>\n            <input type=\"radio\" value=\"C\" />\n            <label>Party</label>\n          </div>\n\n          <div>\n            <input type=\"radio\" value=\"C\" />\n            <label>Romantic</label>\n          </div>\n\n          <div>\n            <input type=\"radio\" value=\"D\" />\n            <label>Wholesome</label>\n          </div>\n        </ul>\n      </form>\n      {/* <h1>{category}</h1>\n      TRACKS\n      <ul>{showTracks()}</ul>\n      PLAYLIST\n      <ul>{showPlaylist()}</ul>\n      CATEGORIES\n      <ul>{showCategories()}</ul> */}\n      <div className=\"buttons-row\">\n        <Link to=\"/attractions\">\n          <button>Previous: Attractions</button>\n        </Link>\n        <Link to=\"/myexperience\">\n          <button>Finish Up: My Experience</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}